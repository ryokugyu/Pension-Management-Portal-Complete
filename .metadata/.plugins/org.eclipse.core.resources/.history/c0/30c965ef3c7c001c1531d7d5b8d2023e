package com.cts.pensionerDetail.controller;

import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.hamcrest.Matchers;
//import org.aspectj.lang.annotation.Before;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentMatchers;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;

import com.cts.pensionerDetail.exception.NotFoundException;
import com.cts.pensionerDetail.model.BankDetails;
import com.cts.pensionerDetail.model.PensionerDetails;
import com.cts.pensionerDetail.service.PensionerDetailServiceImpl;
import com.cts.pensionerDetail.util.DateUtil;

@WebMvcTest
class PensionDetailsControllerTest {

	@Autowired
	private MockMvc mockMvc;

	@MockBean
	private PensionerDetailServiceImpl service;

	@Test
	void testToGetCorrectPensionerDetailsFromController() throws Exception {

		final String aadhaarCardNumber = "848766419593";
		PensionerDetails pensionerDetail = new PensionerDetails("Caleb", DateUtil.parseDate("21-04-2012"), "K94ZHJ8ZXC",
				36004, 5919, "self", new BankDetails("New Edge Bank System", 61390268, "public"));
		when(service.getPensionerDetailByAadhaarNumber(aadhaarCardNumber)).thenReturn(pensionerDetail);
		mockMvc.perform(
				get("/pensionerDetailByAadhaar/{aadhaarNumber}", aadhaarCardNumber).accept(MediaType.APPLICATION_JSON))
				.andExpect(status().isOk()).andExpect(jsonPath("$.name", Matchers.equalTo("Caleb")))
				.andExpect(jsonPath("$.pan", Matchers.equalTo("K94ZHJ8ZXC")))
				.andExpect(jsonPath("$.dateOfBirth", Matchers.equalTo("21-04-2012")))
				.andExpect(jsonPath("$.bank.accountNumber", Matchers.equalTo(61390268)));

	}

	@Test
	void testForAadharNumberNotInCsvFile() throws Exception {

		final String aadhaarNumber = "12345678888";

		when(service.getPensionerDetailByAadhaarNumber(ArgumentMatchers.any()))
				.thenThrow(new NotFoundException("AADHAAR_NUMBER_NOT_FOUND"));

		mockMvc.perform(
				get("/pensionerDetailByAadhaar/{aadhaarNumber}", aadhaarNumber).accept(MediaType.APPLICATION_JSON))
				.andExpect(status().is4xxClientError())
				.andExpect(jsonPath("$.message", Matchers.equalTo("AADHAAR_NUMBER_NOT_FOUND")));
	}

}
