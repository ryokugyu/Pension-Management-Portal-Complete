<?xml version="1.0" encoding="UTF-8"?><testrun name="Authorization-Microservice" project="Authorization-Microservice" tests="21" started="21" failures="0" errors="0" ignored="0">
  <testsuite name="com.cts.auth.utils.JWTUtilTests" time="0.573" displayname="JWTUtilTests" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.utils.JWTUtilTests]">
    <testcase name="jwtUtilNotNull" classname="com.cts.auth.utils.JWTUtilTests" time="0.224" displayname="jwtUtilNotNull()" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.utils.JWTUtilTests]/[method:jwtUtilNotNull()]"/>
    <testcase name="testIsTokenExpiredOrInvalidFormat_invalidTokenSignature" classname="com.cts.auth.utils.JWTUtilTests" time="0.313" displayname="This method is responsible to test isTokenExpiredOrInvalidFormat() for Invalid token signature" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.utils.JWTUtilTests]/[method:testIsTokenExpiredOrInvalidFormat_invalidTokenSignature()]"/>
    <testcase name="testIsTokenExpiredOrInvalidFormat_validToken" classname="com.cts.auth.utils.JWTUtilTests" time="0.012" displayname="This method is responsible to test isTokenExpiredOrInvalidFormat()" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.utils.JWTUtilTests]/[method:testIsTokenExpiredOrInvalidFormat_validToken()]"/>
    <testcase name="testIsTokenExpiredOrInvalidFormat_invalidFormatToken" classname="com.cts.auth.utils.JWTUtilTests" time="0.004" displayname="This method is responsible to test isTokenExpiredOrInvalidFormat() for Token with Invalid Format" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.utils.JWTUtilTests]/[method:testIsTokenExpiredOrInvalidFormat_invalidFormatToken()]"/>
    <testcase name="testGetUsernameFromToken" classname="com.cts.auth.utils.JWTUtilTests" time="0.007" displayname="This method is responsible to test GetUsernameFromToken()" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.utils.JWTUtilTests]/[method:testGetUsernameFromToken()]"/>
    <testcase name="testIsTokenExpiredOrInvalidFormat_nullToken" classname="com.cts.auth.utils.JWTUtilTests" time="0.005" displayname="This method is responsible to test isTokenExpiredOrInvalidFormat() for Null token" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.utils.JWTUtilTests]/[method:testIsTokenExpiredOrInvalidFormat_nullToken()]"/>
    <testcase name="testIsTokenExpiredOrInvalidFormat_expiredToken" classname="com.cts.auth.utils.JWTUtilTests" time="0.005" displayname="This method is responsible to test isTokenExpiredOrInvalidFormat() for Expired token" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.utils.JWTUtilTests]/[method:testIsTokenExpiredOrInvalidFormat_expiredToken()]"/>
  </testsuite>
  <testsuite name="com.cts.auth.service.UserServiceTests" time="0.03" displayname="UserServiceTests" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.service.UserServiceTests]">
    <testcase name="testLoadUserByUsername_validUsername" classname="com.cts.auth.service.UserServiceTests" time="0.025" displayname="This method is responsible to test LoadUserByUsername() method when username is valid" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.service.UserServiceTests]/[method:testLoadUserByUsername_validUsername()]"/>
    <testcase name="testLoadUserByUsername_invalidUsername" classname="com.cts.auth.service.UserServiceTests" time="0.004" displayname="This method is responsible to test LoadUserByUsername() method when username is invalid" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.service.UserServiceTests]/[method:testLoadUserByUsername_invalidUsername()]"/>
  </testsuite>
  <testsuite name="com.cts.auth.AuthorizationMicroserviceApplicationTests" time="1.458" displayname="AuthorizationMicroserviceApplicationTests" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.AuthorizationMicroserviceApplicationTests]">
    <testcase name="contextLoads" classname="com.cts.auth.AuthorizationMicroserviceApplicationTests" time="1.458" displayname="contextLoads()" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.AuthorizationMicroserviceApplicationTests]/[method:contextLoads()]"/>
  </testsuite>
  <testsuite name="com.cts.auth.controller.AuthorizationControllerTests" time="0.216" displayname="AuthorizationControllerTests" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.controller.AuthorizationControllerTests]">
    <testcase name="testLogin_withInvalidCredentials" classname="com.cts.auth.controller.AuthorizationControllerTests" time="0.143" displayname="This method is responsible to test login() method with invalid credentials" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.controller.AuthorizationControllerTests]/[method:testLogin_withInvalidCredentials()]"/>
    <testcase name="testStatusCheck" classname="com.cts.auth.controller.AuthorizationControllerTests" time="0.008" displayname="Test method to check for status check" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.controller.AuthorizationControllerTests]/[method:testStatusCheck()]"/>
    <testcase name="testValidate_withInvalidRole" classname="com.cts.auth.controller.AuthorizationControllerTests" time="0.012" displayname="This method is responsible to test validateAdmin() method with invalid role" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.controller.AuthorizationControllerTests]/[method:testValidate_withInvalidRole()]"/>
    <testcase name="testLogin_withLockedCredentials" classname="com.cts.auth.controller.AuthorizationControllerTests" time="0.006" displayname="This method is responsible to test login() method with locked account credentials" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.controller.AuthorizationControllerTests]/[method:testLogin_withLockedCredentials()]"/>
    <testcase name="testValidate_withInvalidToken" classname="com.cts.auth.controller.AuthorizationControllerTests" time="0.006" displayname="This method is responsible to test validateAdmin() method with invalid/expired token" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.controller.AuthorizationControllerTests]/[method:testValidate_withInvalidToken()]"/>
    <testcase name="testLogin_withDisabledAccountCredentials" classname="com.cts.auth.controller.AuthorizationControllerTests" time="0.006" displayname="This method is responsible to test login() method with disabled account credentials" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.controller.AuthorizationControllerTests]/[method:testLogin_withDisabledAccountCredentials()]"/>
    <testcase name="testLogin_withValidCredentials" classname="com.cts.auth.controller.AuthorizationControllerTests" time="0.007" displayname="This method is responsible to test login() method with valid credentials" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.controller.AuthorizationControllerTests]/[method:testLogin_withValidCredentials()]"/>
    <testcase name="testValidateAdmin_withValidTokenAndRole" classname="com.cts.auth.controller.AuthorizationControllerTests" time="0.006" displayname="This method is responsible to test validateAdmin() method with valid token" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.controller.AuthorizationControllerTests]/[method:testValidateAdmin_withValidTokenAndRole()]"/>
    <testcase name="testLogin_withGlobalExceptions" classname="com.cts.auth.controller.AuthorizationControllerTests" time="0.012" displayname="This method is responsible to test login() method with Global Input Errors" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.controller.AuthorizationControllerTests]/[method:testLogin_withGlobalExceptions()]"/>
  </testsuite>
  <testsuite name="com.cts.auth.repository.UserRepositoryTests" time="0.048" displayname="UserRepositoryTests" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.repository.UserRepositoryTests]">
    <testcase name="testFindUserById_userExists" classname="com.cts.auth.repository.UserRepositoryTests" time="0.044" displayname="This method is responsible to test findById() method when user exists in database" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.repository.UserRepositoryTests]/[method:testFindUserById_userExists()]"/>
    <testcase name="testFindUserById_userDoesNotExists" classname="com.cts.auth.repository.UserRepositoryTests" time="0.004" displayname="This method is responsible to test findById() method when user doesn not exists in database" uniqueid="[engine:junit-jupiter]/[class:com.cts.auth.repository.UserRepositoryTests]/[method:testFindUserById_userDoesNotExists()]"/>
  </testsuite>
</testrun>
